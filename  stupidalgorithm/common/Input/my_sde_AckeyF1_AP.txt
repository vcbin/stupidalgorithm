# specific Objective Function/test problem
# 	1 -> sphere function
# 	2 -> griewank function
#	  3 -> rastrigin function
#	  4 -> ackeyf1 function
# 	5 -> f5 function
# 	6 -> rosenbrock function
# 	7 -> step function
# 	8 -> quartic function with noise
func_type = 4

# run/trial number
run = 30

# population size
pop_size = 50

# stop criterion type
# 1 -> stop on max GENERATION number
# 2 -> stop on max EVALUATION number
# 3 -> stop on max STAGNATION number
# 4 -> stop on specified delta_y(best_so_far-optimum)
stop_type = 2

# stop criterion related value:
# stop criterion type = 1 -> max GENERATION number
# stop criterion type = 2 -> max EVALUATION number
# stop criterion type = 3 -> max STAGNATION number
# stop criterion type = 4 -> delta_y <= stop_threshold
stop_threshold = 50000

# number of real variable/ dimensionality of test problem
dimension = 30

# lower bound of ALL variables
val_lower_bound = -36.0

# upper bound of ALL variables
val_upper_bound = 36.0

# initialization lower bound of ALL variables
ini_lower_bound = -36.0

# initialization upper bound of ALL variables
ini_upper_bound = 36.0

# mean of crossover probability normal distribution
pr_mean = 0.5

# sigma of crossover probability normal distribution
pr_sigma = 0.15

# control parameter F initialization type
# 1 -> initialize F with uniform distribution
# 2 -> initialize F with normal distribution
# my sde SPECIFIC,control parameter F initialization type	
# 1 -> uniform distribution	
# 2 -> normal distribution
ini_f_type = 1

# lower bound of initial uniform distribution of control parameter F
ini_f_uni_low_bound = 0.0

# upper bound of initial uniform distribution of control parameter F
ini_f_uni_up_bound = 1.0


# my sde SPECIFIC,learning period(F_mean,F_sigma update frequency)
learn_p = 100

# my sde SPECIFIC,control parameter F granularity
# 0 -> f per individual
# 1 -> f per dimension
f_per_dim = 0

# my sde SPECIFIC,control parameter Pr strategy
# 1 -> static normal distribution
# 2 -> dynamic normal distribution learning
pr_stra = 2
